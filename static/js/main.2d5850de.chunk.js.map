{"version":3,"sources":["components/RepetitionExercises/index.js","components/DurationExercises/index.js","components/Login/index.js","components/Food/index.js","App.js","reportWebVitals.js","index.js"],"names":["RepetitionScreen","props","state","value","this","setState","prevState","name","onClick","addOne","reset","React","Component","DurationScreen","timer","counter","miliseconds","startDisabled","stopDisabled","onButtonClear","bind","start","self","setInterval","num","Number","toString","count","length","clearInterval","onButtonStop","LoginScreen","App","username","FoodScreen","parseInt","totalPoints","style","objType","map","obj","index","calorieCounter","MENU","LOGIN_SCREEN","REPETITION_SCREEN","DURATION_SCREEN","FOOD_SCREEN","MenuScreen","currentScreen","selectedItem","undefined","screen","backgroundColor","color","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2d5850de.chunk.js","sourcesContent":["import React from \"react\"\r\n\r\nexport default class RepetitionScreen extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = { value: this.props.value }\r\n    }\r\n    reset() {\r\n        this.setState((prevState) => ({\r\n            value: prevState.value - prevState.value,\r\n        }))\r\n    }\r\n    addOne() {\r\n        this.setState((prevState) => ({\r\n            value: prevState.value + 1,\r\n        }))\r\n    }\r\n    render() {\r\n        return (\r\n            <>\r\n            \r\n                <h2>{this.props.name}</h2>\r\n                <p>Record how many {this.props.name} you completed </p>\r\n                <p>Reps: {this.state.value}</p>\r\n                <button onClick={() => this.addOne()}>Add One</button>\r\n                <button onClick={() => this.reset()}>Reset</button>\r\n                \r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\n","import React from \"react\"\r\n\r\nexport default class DurationScreen extends React.Component {\r\n    state = {\r\n        timer: null,\r\n        counter: '00',\r\n        miliseconds: '00',\r\n        startDisabled: true,\r\n        stopDisabled: false\r\n    }\r\n    constructor(props) {\r\n        super(props);\r\n        this.onButtonClear = this.onButtonClear.bind(this);\r\n        this.start = this.start.bind(this);\r\n    }\r\n    start() {\r\n        var self = this;\r\n        let timer = setInterval(() => {\r\n            var num = (Number(this.state.miliseconds) + 1).toString(),\r\n                count = this.state.counter;\r\n\r\n            if (Number(this.state.miliseconds) === 99) {\r\n                count = (Number(this.state.counter) + 1).toString();\r\n                num = '00';\r\n            }\r\n\r\n            self.setState({\r\n                counter: count.length === 1 ? '0' + count : count,\r\n                miliseconds: num.length === 1 ? '0' + num : num\r\n            });\r\n        }, 0);\r\n        this.setState({ timer });\r\n    }\r\n    onButtonStop() {\r\n        clearInterval(this.state.timer);\r\n        this.setState({ startDisabled: false, stopDisabled: true });\r\n    }\r\n    onButtonClear() {\r\n        this.setState({\r\n            timer: null,\r\n            counter: '00',\r\n            miliseconds: '00'\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n            \r\n                <h2>{this.props.name}</h2>\r\n                <p>Time how long you can do {this.props.name} for </p>\r\n                <p>Timer: {this.state.counter}:{this.state.miliseconds}</p>\r\n                <button onClick={() => this.start()} >Start</button>\r\n                <button onClick={() => this.onButtonStop()}>Stop</button>\r\n                <button onClick={() => this.onButtonClear()} >Reset</button>\r\n            </>\r\n\r\n        );\r\n    }\r\n\r\n}","import React from \"react\"\r\n\r\nclass LoginScreen extends React.Component {\r\n    render() {\r\n      return (\r\n        <>\r\n        <center>\r\n          <h2>Log In</h2>\r\n          <p>Username:</p>\r\n          <input name=\"username\" ></input>\r\n          <br></br>\r\n          <p>Password:</p>\r\n          <input name=\"password\" ></input>\r\n          <br></br>\r\n          </center>\r\n        </>\r\n      )\r\n    }\r\n  }\r\n  \r\n  export default class App extends React.Component {\r\n    constructor(props) {\r\n      super(props)\r\n      this.state = {username: '' }\r\n    }\r\n\r\n    render() {\r\n      let screen\r\n    \r\n        screen = (\r\n          <>\r\n            <LoginScreen></LoginScreen>\r\n          </>\r\n        )\r\n      return screen\r\n    }\r\n  }\r\n  \r\n  ","import React from \"react\"\r\nexport default class FoodScreen extends React.Component {\r\n    constructor(props) {\r\n      super(props)\r\n      this.state = { value: parseInt(this.props.value,0) }\r\n      \r\n    }\r\n    calorieCounter(totalPoints){\r\n            this.setState((prevState) => ({\r\n                value: prevState.value + totalPoints\r\n            }))\r\n    }\r\n    render(){\r\n      \r\n        let objects = [\r\n            { objType: \"food\", name: \"Almonds\", value: 2 },\r\n            { objType: \"food\", name: \"Animal Crackers\", value: 3 },\r\n            { objType: \"food\", name: \"Asparagus\", value: 0 },\r\n            { objType: \"food\", name: \"Bacon\", value: 3 },\r\n            { objType: \"food\", name: \"Bagel\", value: 3},\r\n            { objType: \"food\", name: \"Banana\", value: 2 },\r\n            { objType: \"food\", name: \"Bread\", value: 2 },\r\n            { objType: \"food\", name: \"Chocolate\", value: 3 },\r\n            { objType: \"food\", name: \"Coca-Cola\", value: 3 },\r\n            { objType: \"food\", name: \"Cucumber\", value: 0 },\r\n            { objType: \"food\", name: \"Donuts\", value: 5 },\r\n            { objType: \"food\", name: \"Hamburger\", value: 6 },\r\n            { objType: \"food\", name: \"Hard Boiled Eggs \", value: 0 },\r\n            { objType: \"food\", name: \"Lettuce\", value: 0 },\r\n            { objType: \"food\", name: \"Lucky Charms\", value: 5 },\r\n            { objType: \"food\", name: \"Milk\", value: 4 },\r\n            { objType: \"food\", name: \"Pizza\", value: 6 },\r\n            { objType: \"food\", name: \"Potato\", value: 3 },             \r\n            { objType: \"food\", name: \"Rice\", value: 4 },\r\n            { objType: \"food\", name: \"Sprite\", value: 3 },\r\n            { objType: \"food\", name: \"Watermelon\", value: 1 },\r\n            { objType: \"food\", name: \"Yogurt\", value: 4 },\r\n          ]\r\n        return(\r\n            <>\r\n            \r\n              <center>\r\n        <h2>Food Points</h2>\r\n        <p>You  have 150 points per day</p>\r\n        Calories: {this.state.value}\r\n              <br></br>\r\n        <ul style={{ \"listStyleType\": \"none\" }}>\r\n                {objects.map((obj, index) =>\r\n                  <li key={index}>\r\n                    <button onClick={() =>\r\n                      this.calorieCounter(obj.value)\r\n                    }\r\n\r\n                    >\r\n                      {obj.name}\r\n                    </button>\r\n                    <br /><br />\r\n                  </li>\r\n                )}\r\n\r\n              </ul>\r\n              \r\n              </center>\r\n        </>\r\n        )\r\n    }\r\n}","import './App.css'\nimport React from \"react\"\nimport RepetitionScreen from \"./components/RepetitionExercises\"\nimport DurationScreen from \"./components/DurationExercises\"\nimport LoginScreen from \"./components/Login\"\nimport FoodScreen from \"./components/Food\"\n\nconst MENU = \"menu\"\nconst LOGIN_SCREEN = \"login\"\nconst REPETITION_SCREEN = \"repetition_screen\"\nconst DURATION_SCREEN = \"duration_screen\"\nconst FOOD_SCREEN = \"food_screen\"\n\nexport default class MenuScreen extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = { currentScreen: MENU, selectedItem: undefined }\n  }\n  render() {\n    let objects = [\n      { objType: \"repetition\", name: \"Burpees \", value: 0 },\n      { objType: \"repetition\", name: \"Push Ups \", value: 0 },\n      { objType: \"repetition\", name: \"Squats \", value: 0 },\n      { objType: \"repetition\", name: \"Crunches \", value: 0 },\n      { objType: \"repetition\", name: \"Curtsy Lunges \", value: 0 },\n      { objType: \"duration\", name: \"Jumping Jacks \" },\n      { objType: \"duration\", name: \"Wall Sit \" },\n      { objType: \"duration\", name: \"Flutter Kicks \" },\n      { objType: \"duration\", name: \"Plank \" },\n      { objType: \"duration\", name: \"Tricep Dips \" },\n    ]\n    let screen\n    switch (this.state.currentScreen) {\n      case MENU:\n        screen = (\n          <>\n          <div style={{backgroundColor: \"#90ee90\"}}>\n           <button onClick={() => this.setState({ currentScreen: LOGIN_SCREEN })}>Log In</button>\n           <button onClick={() => this.setState({ currentScreen: FOOD_SCREEN })}>Calorie Tracker</button>\n            <center>\n              <h2>Exercises</h2>\n              <p style={{color: \"blue\"}}>+ Repetition Exercise</p>\n              <p style={{color: \"purple\"}}>* Duration Exercise</p>\n              <ul style={{ \"listStyleType\": \"none\" }}>\n                {objects.map((obj, index) =>\n                  <li key={index}>\n                    <button style={{color: obj.objType === \"repetition\" ? \"blue\" : \"purple\"}} onClick={() =>\n                      this.setState({\n                        currentScreen: obj.objType === \"repetition\" ? REPETITION_SCREEN : DURATION_SCREEN,\n                        selectedItem: obj,\n                      })\n                    }\n\n                    >\n                      <strong>{obj.name}{obj.objType === \"repetition\" ? \"+\" : \"*\"}</strong>\n                    </button>\n                    <br /><br />\n                  </li>\n                )}\n\n              </ul>\n            </center>\n            </div>\n          </>\n        )\n        break\n      case REPETITION_SCREEN:\n        screen = (\n          <>\n          <body style={{backgroundColor: \"blue\", color: \"white\"}}>\n            <RepetitionScreen{...this.state.selectedItem}></RepetitionScreen>\n            <br></br>\n            <button onClick={() => this.setState({ currentScreen: MENU })}>\n              Back\n            </button>\n            </body>\n          </>\n        )\n        break\n      case DURATION_SCREEN:\n        screen = (\n          <>\n          <body style={{backgroundColor: \"purple\", color: \"white\"}}>\n            <DurationScreen {...this.state.selectedItem}></DurationScreen>\n            <br></br>\n            <button onClick={() => this.setState({ currentScreen: MENU })}>\n              Back\n            </button>\n            </body>\n          </>\n        )\n        break\n        case FOOD_SCREEN:\n          screen = (\n            <>\n            <body style={{backgroundColor: \"#90ee90\"}}>\n            <button onClick={() => this.setState({ currentScreen: MENU })}>\n                Back\n              </button>\n              <FoodScreen value={0} {...this.state.selectedItem}></FoodScreen>\n              </body>\n            </>\n          )\n          break\n        case LOGIN_SCREEN:\n          screen = (\n            <>\n            <body style={{backgroundColor: \"#90ee90\"}}>\n              <LoginScreen></LoginScreen>\n              <center>\n              <button onClick={() => this.setState({ currentScreen: MENU })}>\n                Login\n              </button>\n              </center>\n              </body>\n            </>\n          )\n          break\n        default:\n        screen = undefined;\n    }\n    \n    return screen\n  }\n}\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}